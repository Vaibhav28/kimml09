Demo contents
- General remarks
    => Some issues with the datastructure (missing coords, alignment)
    => Tried Skew/Kurtosis, but saw no significant increase in accuracy

- Data sets:
    => 3 kinds of input sets, derived from original data. We did this by extracting features from the data as a dimension recution technique. We also used the original data directly for per-voxel classification and PCA.

    => 1: Voxels in an ROI are selected. Then per trial, voxel values are normalized for avg and std.
          Then, each values are averaged per ROI. This results in 7 components.
    => 2: Same as 1, but includes average and std for each ROI. This results in 14 components.
          (We also did 2 with added skew and kurtosis, but saw no improvements in the classifier)
    => 3: Voxels in an ROI are selected. Then for all trials trial, for each voxel, its values are normalized
          for avg and std. Then, voxels values are averaged per ROI. This results in 7 components.



- PCA poor results on all voxels of ROI ~ 380 out of 1800
    => 52% with GNB without PCA
    => 48-56% with GNB after PCA (see graph)
    => Partially because CALC region has an empty intersect?
    => Instead of PCA we choose to generalize ROI features, then no need for PCA since nr comps is low already

    => Then by index instead of coordinate (those were very limited). Now we have ~4900 comps before PCA
    => Yields up to 61.45% (see graph) for 148 components.


- GNB

- Multivariate

- Support Vector Machine

Presentation contents



Matlab movies:

   load('data-starplus-04799-v7');
   alltrials= 1:meta.ntrials
   ts= [info.actionAnswer]==0
   trialsOfInterest=alltrials(ts)
   [i,d,m]=transformIDM_avgTrials(info,data,meta,trialsOfInterest);

   M1 = animate16Trial(i,d,m,1);

   M2 = animateTrial(i,d,m,1,5);